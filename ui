<?php
require 'vendor/autoload.php';
use PhpSchool\CliMenu\CliMenu;
use PhpSchool\CliMenu\Builder\CliMenuBuilder;
use BCAParser\BCAParser;
use Wujunze\Colors;
use noximo\PHPColoredAsciiLinechart\Linechart;
use noximo\PHPColoredAsciiLinechart\Settings;
use noximo\PHPColoredAsciiLinechart\Chart;
use noximo\PHPColoredAsciiLinechart\Colorizers\AsciiColorizer;

function parsed($number)
{
  return $parsed = floatval(preg_replace('/[^\d.]/', '',($number)));
}

$art = <<<ART


          _|_|_|
        _|
          _|_|
              _|
        _|_|_|


https://github.com/igun997
(Singgajiantediundur)
ART;


$bca_saldo = function (CliMenu $menu) {
    $colors = new Colors();
    $args = $_SERVER["argv"];

    if (isset($args[1]) && isset($args[2])) {
      $arUser = $args[1];
      $arPassword = $args[2];
    }

    if (isset($args[1]) && isset($args[2])) {
      $username = $arUser;
      $password = $arPassword;
    }else {
      $username = $menu->askText()
          ->setPromptText('Enter User ID')
          ->setPlaceholderText('XXXXX')
          ->ask();



      $password = $menu->askPassword()
          ->setPromptText('Enter Password')
          ->setValidationFailedText('Password must numeric')
          ->setPlaceholderText('')
          ->setValidator(function ($password) {
              return is_numeric($password);
          })
          ->ask();

      $username = $username->fetch();
      $password = $password->fetch();
    }

    echo $colors->getColoredString("Login .. ","green",null).PHP_EOL;
    $get = new BCAParser($username, $password);
    echo $colors->getColoredString("Logged In ","green",null).PHP_EOL;
    echo $colors->getColoredString("Get SALDO ..","green",null).PHP_EOL;
    $saldo = $get->getSaldo();
    echo $colors->getColoredString("Preparing .. ","green",null).PHP_EOL;
    $get->logout();
    echo $colors->getColoredString("Clear Cookies ","green",null).PHP_EOL;
    if (isset($saldo[0]["saldo"])) {
      echo $colors->getColoredString("Saldo Anda Dari Rekening ".$saldo[0]["rekening"]."  : ".$saldo[0]["saldo"],"green",null).PHP_EOL;
    }else {
      echo $colors->getColoredString("Maaf anda harus menunggu 5 menit lagi ","red","white").PHP_EOL;
    }

};

$bca_mutasi = function (CliMenu $menu) {

    $colors = new Colors();
    $args = $_SERVER["argv"];
    $linechart = new Linechart();



    if (isset($args[1]) && isset($args[2])) {
      $arUser = $args[1];
      $arPassword = $args[2];
    }

    if (isset($args[1]) && isset($args[2])) {
      $username = $arUser;
      $password = $arPassword;
    }else {
      $username = $menu->askText()
          ->setPromptText('Enter User ID')
          ->setPlaceholderText('XXXXX')
          ->ask();

      $password = $menu->askPassword()
          ->setPromptText('Enter Password')
          ->setValidationFailedText('Password must numeric')
          ->setPlaceholderText('')
          ->setValidator(function ($password) {
              return is_numeric($password);
          })
          ->ask();

      $username = $username->fetch();
      $password = $password->fetch();
    }

    $from = $menu->askText()
        ->setPromptText('From Date ')
        ->setPlaceholderText('(DD-MM-YYYY)')
        ->ask();

    $to = $menu->askText()
        ->setPromptText('To Date ')
        ->setPlaceholderText('(DD-MM-YYYY)')
        ->ask();

    $dateFrom = strtotime($from->fetch());
    $dateTo = strtotime($to->fetch());

    echo $colors->getColoredString("Validating Date .. ","green",null).PHP_EOL;
    if (!$dateFrom && !$dateTo) {
      $dateTo = time();
      $dateFrom = strtotime("-2 day",$dateTo);
      echo $colors->getColoredString("Set To 2 Days Ago  .. ","green",null).PHP_EOL;
    }else {
      if ((!$dateFrom || !$dateTo) || ($dateFrom > $dateTo)) {
        echo $colors->getColoredString("Date Invalid ","red",null).PHP_EOL;
        return false;
      }else {
        echo $colors->getColoredString("Date Valid ","green",null).PHP_EOL;
      }
    }


    echo $colors->getColoredString("Login .. ","green",null).PHP_EOL;
    $get = new BCAParser($username, $password);
    echo $colors->getColoredString("Logged In ","green",null).PHP_EOL;
    echo $colors->getColoredString("Get Mutasi ..","green",null).PHP_EOL;
    $mutasi = $get->getListTransaksi(date("Y-m-d",$dateFrom),date("Y-m-d",$dateTo));
    echo $colors->getColoredString("Preparing .. ","green",null).PHP_EOL;
    $get->logout();
    echo $colors->getColoredString("Clear Cookies ","green",null).PHP_EOL;
    echo $colors->getColoredString("-------------------------------- ",null,"white").PHP_EOL;

    $jdF = date("d",$dateFrom);
    $jdT = date("d",$dateTo);

    $jdArray = [];

    for ($i=$jdF; $i <= $jdT ; $i++) {
      $jdArray[$i] = [0];
    }


    if (count($mutasi) > 0) {
      $red = [];
      $green = [];
      $text = [];
      $statistik = [];
      foreach ($mutasi as $key => $value) {

        $value["date"] = ($value["date"] == "PEND")?date("Y-m-d",$dateTo):$value["date"];

        $rm = $value["description"][count($value["description"]) - 1];

        if($value["flows"] == "CR"){
          $text[] = $colors->getColoredString($value["date"]." - Rp. ".$rm." (".$value["description"][2].")","green",null).PHP_EOL;

        }else {
          $text[] = $colors->getColoredString($value["date"]." - Rp. ".$rm." (".$value["description"][2].")","red",null).PHP_EOL;
        }

        foreach ($jdArray as $k => &$sa) {

          if ($k == date("d",strtotime($value["date"]))) {
            if($value["flows"] == "CR"){
              $sa[] = parsed($rm)*1;
            }else {
              $sa[] = parsed($rm)*-1;
            }
            break;
          }


        }

      }

      $statistik = [];

      // Skala 1000;

      foreach ($jdArray as $key => $value) {
        $statistik[] = array_sum($value);
      }

      // var_dump($red);
      $settings = new Settings();
      $settings
        ->setColorizer(new AsciiColorizer())  // Colorizer, choose between Ascii, HTML and image colorizers
        ->setFPS(10)  // Control speed of chart::wait method
        ->setHeight(10)  // Set fixed height of chart. chart will scale accordingly. If not set, height will be calculated based on highest and lowest numbers across all sets of markers.
        ->setPadding(1, ' ')  // Set lenght of a padding and character used
        ->setOffset(10)  // Offset left border
        ;

      $linechart->setSettings($settings);

      echo $colors->getColoredString("Statistik DB & CR Periode ".date("Y-m-d",$dateFrom)." - ".date("Y-m-d",$dateTo) ,"blue",null).PHP_EOL;
      $linechart->addMarkers($statistik,[AsciiColorizer::CYAN])->chart()->print();

      // foreach ($statistik as $key => $value) {
      //   echo $value.PHP_EOL;
      // }

      foreach ($text as $key => $value) {
        echo $value;
      }

    }else {
      echo $colors->getColoredString("Username & Password Salah atau Transaksi Tidak Ditemukan ","red",null).PHP_EOL;
    }
    echo $colors->getColoredString("-------------------------------- ",null,"white").PHP_EOL;

};

$menu = (new CliMenuBuilder)
    ->addAsciiArt($art)
    ->addLineBreak("=")
    ->setTitle('BCA  CLI V0.1')
    ->addItem('Cek Saldo', $bca_saldo)
    ->addItem('Cek Mutasi', $bca_mutasi)
    ->setBackgroundColour('237')
    ->setForegroundColour('156')
    ->setBorder(0, 0, 0, 2, '165')
    ->setPaddingTopBottom(4)
    ->setPaddingLeftRight(8)
    ->addLineBreak('-')
    ->setMarginAuto()
    ->build();

$menu->open();
